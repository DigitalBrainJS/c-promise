{
  "name": "c-promise2",
  "version": "0.13.12",
  "description": "Cancelable promise with progress capturing, pause, timeouts, signals, data flows and decorators support",
  "author": {
    "name": "Dmitriy Mozgovoy",
    "email": "robotshara@gmail.com",
    "url": "http://github.com/DigitalBrainJS/"
  },
  "main": "./dist/c-promise.cjs.js",
  "module": "./dist/c-promise.mjs",
  "es2015": "./dist/c-promise.mjs",
  "browser": "./dist/c-promise.umd.js",
  "unpkg": {
    "default": "./dist/c-promise.umd.js",
    "module": "./dist/c-promise.js",
    "production": "./dist/c-promise.umd.min.js"
  },
  "scripts": {
    "test": "npm run test:build && mocha ./test/runner.js --exit --timeout=3000",
    "test:watch": "nodemon --watch lib/ --watch ./test/tests/CPromise.js --watch ./test/src --exec \"npm test\"",
    "test:coverage": "nyc --check-coverage npm run test",
    "test:decorators:build": "rollup ./test/src/decorators.js --file ./test/tests/decorators.js --format cjs --config ./test/rollup.config.js",
    "test:decorators:legacy:build": "rollup ./test/src/decorators.js --file ./test/tests/decorators.legacy.js --format cjs --config ./test/rollup.config.js --environment decorators:legacy",
    "test:build": "npm run test:decorators:build && npm run test:decorators:legacy:build",
    "coverage:report": "nyc report --reporter=html --reporter=text",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "prepublishOnly": "npm run build && npm run test:coverage && npm run docs",
    "postversion": "git push && git push --tags",
    "changelog": "auto-changelog -p",
    "version": "npm run changelog  && git add CHANGELOG.md",
    "build": "rollup -c",
    "build:watch": "nodemon --watch lib/ --exec \"npm run build\"",
    "dev": "cross-env NODE_ENV=development \"npm run test:watch\"",
    "playground": "npm run playground:build && concurrently --kill-others \"npm run playground:server\" \"npm run playground:watch\"",
    "playground:run": "node playground/build/index.js || true",
    "playground:build": "rollup ./playground/src/index.js --file ./playground/build/index.js --format cjs --config ./playground/rollup.config.js",
    "playground:watch": "nodemon --delay 1000ms -e js,jsx,css --watch ./playground/src/ --watch lib/ --exec \"npm run playground:build\"",
    "playground:server": "browser-sync start --server --index ./playground/index.html --files \"./playground/build/*.*\"",
    "playground:generator": "node playground/generator.js || true",
    "playground:generator:watch": "nodemon --watch ./playground --watch lib/ --exec \"npm run playground:generator\"",
    "playground:decorators": "rollup ./playground/src/decorators.js --file ./playground/build/decorators.js --format cjs --config ./playground/rollup.config.js && node playground/build/decorators.js || true",
    "playground:decorators:legacy": "rollup ./playground/src/decorators.js --file ./playground/build/decorators.js --format cjs --config ./playground/rollup.config.js --environment decorators:legacy && node playground/build/decorators.js || true",
    "playground:decorators:watch": "nodemon --watch ./playground/src/ --watch lib/ --exec \"npm run playground:decorators\"",
    "docs": "jsdoc2md -t ./jsdoc2md/API.hbs.md ./lib/c-promise.js > ./API.md",
    "docs:namepaths": "jsdoc2md ./lib/c-promise.js --namepaths"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run docs && git add ."
    }
  },
  "auto-changelog": {
    "output": "CHANGELOG.md",
    "unreleased": true,
    "commitLimit": false
  },
  "repository": "https://github.com/DigitalBrainJS/c-promise.git",
  "bugs": {
    "url": "https://github.com/DigitalBrainJS/c-promise/issues"
  },
  "nyc": {
    "lines": 60,
    "functions": 60,
    "branches": 60,
    "statements": 60,
    "watermarks": {
      "lines": [
        80,
        95
      ],
      "functions": [
        80,
        95
      ],
      "branches": [
        80,
        95
      ],
      "statements": [
        80,
        95
      ]
    },
    "reporter": [
      "lcov",
      "text-summary"
    ]
  },
  "keywords": [
    "promise",
    "cancelable",
    "cancellable",
    "p-cancelable",
    "timeout",
    "progress",
    "cancel",
    "abortable",
    "abort",
    "AbortController",
    "AbortSignal",
    "async",
    "signal",
    "await",
    "promises",
    "generator",
    "co",
    "yield",
    "reject",
    "race",
    "decorator",
    "delay",
    "break",
    "suspending",
    "wait",
    "bluebird",
    "deferred",
    "react",
    "setState",
    "cancellation",
    "aborting",
    "close",
    "closable",
    "pause",
    "task"
  ],
  "license": "MIT",
  "devDependencies": {
    "@babel/plugin-proposal-class-properties": "^7.13.0",
    "@babel/plugin-proposal-decorators": "^7.13.15",
    "@babel/preset-react": "^7.13.13",
    "@rollup/plugin-babel": "^5.3.0",
    "@rollup/plugin-commonjs": "^15.1.0",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-multi-entry": "^4.0.0",
    "@rollup/plugin-node-resolve": "^9.0.0",
    "@rollup/plugin-replace": "^2.4.2",
    "auto-changelog": "^2.2.1",
    "bootstrap": "^4.6.0",
    "concurrently": "^6.0.2",
    "coveralls": "^3.1.0",
    "cp-axios": "^0.2.0",
    "cross-env": "^7.0.3",
    "husky": "^4.3.8",
    "install": "^0.13.0",
    "jsdoc-to-markdown": "^6.0.1",
    "mocha": "^8.3.2",
    "nodemon": "^2.0.7",
    "npm": "^6.14.13",
    "nyc": "^15.1.0",
    "postcss": "^8.2.12",
    "react": "^17.0.2",
    "react-bootstrap": "^1.5.2",
    "react-dom": "^17.0.2",
    "react-is": "^17.0.2",
    "rollup": "^2.45.2",
    "rollup-plugin-postcss": "^4.0.0",
    "rollup-plugin-terser": "^7.0.2"
  }
}
